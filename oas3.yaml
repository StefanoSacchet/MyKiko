openapi: 3.0.0
info:
  version: '1.0'
  title: "MyKiko OpenAPI 3.0"
  description: API for managing pets.
  license:
    name: MIT
servers:
  - url: http://localhost:8080/api/v1
    description: Localhost
paths:
  /authentications:
    post:
      description: >-
        Verify the user's credentials in the system.
      summary: Authenticates the user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email: 
                  type: String
                  description: 'Email address of the user'
                password:
                  type: String
                  description: 'Personal password of the user'
      responses:
        '200':
          description: 'User verified'
          headers:
            'Location':
              schema:
                type: string
              description: Link to the user plus his informations
      
  /registration:
    post:
      description: >-
        Creates a new user in the system.
      summary: Register a new user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email: 
                  type: String
                  description: 'Email address of the new user'
                password:
                  type: String
                  description: 'Personal password of the new user'
      responses:
        '201':
          description: 'User created. Link in the Location header'
          headers:
            'Location':
              schema:
                type: string
              description: Link to the newly created user.
        '400':
          description: 'Input fields are empty'
          headers:
            'Message':
              schema:
                type: string
              description: Registration failed. input empty
        '409':
          description: 'The user is already subscribed'
          headers:
            'Message':
              schema:
                type: string
              description: Registration failed. user already subscribed

  /infoAnimale:
    get:
      description: >-
        Prende i dati animale.
      summary: Vede tutte le info
      responses:
        '200':
          description: 'Collections of pets'
          content:
            application/json:
              schema:
                type: string
                items:
                  $ref: '#/components/schemas/InfoAnimale'
        '404':
          description: 'User non trovato'
          headers:
            'Message':
              schema:
                type: string
              description: Autenticazione fallita, User non trovato
              
  /modificaCredenziali:
    put:
      description: >-
        Modifica le credenziali dell'utente.
      summary: Modifica credenziali 
      responses:
          '200':
            description: Changes applyed
            schema:
              type: array
              items:
                $ref: '#/definitions/schemas'
            examples:
              application/json:
                - emailNew: nuovaemail@gmail.com
                  password: nuovapassword123
          '404': 
            description: Error  
  
components:
  schemas:
    Animale:
      type: object
      required:
        - email
        - nome
        - razza
        - eta
        - peso
        - CodiceChip
      properties:
        email:
          type: string
          description: 'User email'
        nome:
          type: string
          description: 'Nome animale'
        razza:
          type: string
          description: 'Razza animale'
        eta:
          type: Number
          description: 'Eta animale'
        peso:
          type: Number
          description: 'Peso animale'
        codiceChip:
          type: String
          description: 'Codice del chip identificativo'
    User:
      type: object
      required:
        - email
        - password
        - animale
      properties:
        email:
          type: string
          description: 'User email'
        password:
          type: string
          description: 'User password'
        animale:
          type: object
          desrciption: 'array dati animale'